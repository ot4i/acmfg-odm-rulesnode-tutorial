

CREATE COMPUTE MODULE Flow_OPCUA_ODM_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		DECLARE cins  NAMESPACE 'com.ibm.acmfg.ClientItem/v1.0';
		DECLARE civns NAMESPACE 'com.ibm.acmfg.ClientItemValue/v1.0';
		DECLARE riens NAMESPACE 'com.ibm.acmfg.ReadItemEvent/v1.0';
		
	
		Declare VarTemp FLOAT;
		Declare VarHumidity FLOAT;
		

		DECLARE itemRef REFERENCE TO InputRoot.XMLNSC.riens:Items.riens:Item;
		
		
		WHILE LASTMOVE(itemRef) DO			
			
			DECLARE valueRef REFERENCE TO itemRef.cins:Value;	
			DECLARE nameRef REFERENCE TO itemRef.cins:name;		
			DECLARE T1  CHARACTER;
			DECLARE T2  CHARACTER;
			SET T1 = 'AC1_temperature';
			SET T2 = 'AC1_humidity';
			
			IF (nameRef = T1 ) THEN
				SET VarTemp = itemRef.cins:Value.civns:Data;	
			END IF;
			
			IF (nameRef = T2) THEN
				SET VarHumidity = itemRef.cins:Value.civns:Data;	
			END IF;
			
			MOVE itemRef NEXTSIBLING;
		END WHILE;	
			
	  
	  	--Create the object as Input-Output parameter for the ODMRules node
        DECLARE refObject REFERENCE TO OutputLocalEnvironment.ACObject;
        CREATE LASTCHILD OF OutputLocalEnvironment AS refObject NAME 'ACObject';
        SET refObject.temperature = VarTemp;
        SET refObject.humidity = VarHumidity;
		SET refObject.status = 'OK' ;
	  			
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
